{"version":3,"file":"static/js/609.789d9d0f.chunk.js","mappings":"6PACA,EAA6B,8BAA7B,EAAyE,+BAAzE,EAAuH,gCAAvH,EAAuK,iC,6BC2EvK,MArEA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAGMC,IADQC,EAAAA,EAAAA,IAAYC,EAAAA,KACTC,EAAAA,EAAAA,OAMXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOX,EAASY,GAClB,IAAK,WACH,OAAOV,EAAYU,GACrB,QACE,OAEL,EAEKC,EAAY,mCAAG,WAAMC,GAAN,wEACnBA,EAAEC,iBACFX,GAAa,GAFM,SAGbR,EAASoB,EAAAA,EAAAA,MAAiB,CAAEjB,MAAAA,EAAOE,SAAAA,KAHtB,OAdnBI,EAAS,aAmBTL,EAAS,IACTE,EAAY,IACZE,GAAa,GAPM,2CAAH,sDAUlB,OACE,iBAAKa,UAAWC,EAAhB,WACE,mCACA,kBAAMD,UAAWC,EAAiBC,SAAUN,EAA5C,WACE,kBAAOO,QAAQ,QAAf,oBACA,kBACEH,UAAWC,EACXG,GAAG,QACHT,MAAOb,EACPuB,SAAUb,EACVc,KAAK,QACLZ,KAAK,QACLa,MAAM,8FACNC,UAAQ,KAEV,kBAAOL,QAAQ,WAAf,uBACA,kBACEH,UAAWC,EACXG,GAAG,WACHT,MAAOX,EACPqB,SAAUb,EACVc,KAAK,WACLZ,KAAK,WACLa,MAAM,iGACNC,UAAQ,KAEV,mBAAQR,UAAWC,EAAmBK,KAAK,SAA3C,SACGpB,EAAY,aAAe,eAKrC,C","sources":["webpack://react-homework-template/./src/views/LoginView/LoginView.module.css?c53e","views/LoginView/LoginView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"logInBlock\":\"LoginView_logInBlock__ZX7us\",\"contactForm\":\"LoginView_contactForm__I5Idw\",\"contactInput\":\"LoginView_contactInput__p2TPl\",\"contactButton\":\"LoginView_contactButton__p1tgW\"};","import operations from 'components/store/Auth/authOperation';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './LoginView.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { getToken } from 'components/store/Auth/authSelectors';\n\nfunction LoginView() {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const token = useSelector(getToken);\n  const navigate = useNavigate();\n\n  function handleLoginSuccess(token) {\n    navigate('/contacts');\n  }\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    await dispatch(operations.logIn({ email, password }));\n    handleLoginSuccess(token);\n    setEmail('');\n    setPassword('');\n    setIsLoading(false);\n  };\n\n  return (\n    <div className={css.logInBlock}>\n      <h1>LogIn</h1>\n      <form className={css.contactForm} onSubmit={handleSubmit}>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          className={css.contactInput}\n          id=\"email\"\n          value={email}\n          onChange={handleChange}\n          type=\"email\"\n          name=\"email\"\n          title=\"Phone email must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          className={css.contactInput}\n          id=\"password\"\n          value={password}\n          onChange={handleChange}\n          type=\"password\"\n          name=\"password\"\n          title=\"Phone password must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button className={css.contactButton} type=\"submit\">\n          {isLoading ? 'Loading...' : 'Enter'}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginView;\n"],"names":["dispatch","useDispatch","useState","email","setEmail","password","setPassword","isLoading","setIsLoading","navigate","useSelector","getToken","useNavigate","handleChange","target","name","value","handleSubmit","e","preventDefault","operations","className","css","onSubmit","htmlFor","id","onChange","type","title","required"],"sourceRoot":""}